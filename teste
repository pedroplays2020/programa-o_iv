<<<<<<< HEAD
import time

#  ex1

count = 0
vogais = 0
Twords = 0
words_t = []
try:
    with open('ficha12.txt') as f:
        lines = f.readlines()
    f.close()
except:
    print('Problema na abertuta do ficheiro')

print(lines)
for text in lines:
    str = text

    vogais += str.count("a")+str.count("e") + \
        str.count("i")+str.count("o")+str.count("u")

    words_t.append(str.split(" "))

    for k in range(len(str)):
        if str[k].isalpha():
            count += 1
for line in range(len(words_t)):
    for word in range(len(words_t[line])):
        if words_t[line][word] != "\n":
            Twords += 1
        else:
            continue

print("vogais: ", vogais)
print("consoantes: ", count-vogais)
print("palavras: ", Twords)
print("linhas: ", len(lines))
# ex2
words_t = []
unique = []
try:
    with open('ficha12.txt') as f:
        lines = f.readlines()
    f.close()
except:
    print('Problema na abertuta do ficheiro')

for text in lines:
    str = text
    words_t.append(str.split(None))

for line in range(len(words_t)):
    for word in range(len(words_t[line])):

        if words_t[line][word] != " " and words_t[line][word] not in unique:
            unique.append(words_t[line][word])
        else:
            continue

try:
    f = open('ficha12_newtext.txt', 'x')
    print("creating file...")
    time.sleep(5)
    f.close()
except:
    print('Problema na criaÃ§ao do ficheiro or file already exists')


with open('ficha12_newtext.txt', 'r+') as f:
    for word in range(len(unique)):
        f.write(unique[word])
        f.write("\n")
=======
<<<<<<< HEAD
def separator(t):
    arr = t.split(" ")
    return unique(arr)


def unique(arr):
    pos = 0
    uniquelist = []
    positiondic = {}
    positionuniquedic = {}

    for word in arr:

        if word not in uniquelist:
            uniquelist.append(word)
            positionuniquedic[word] = pos

        positionsaver(word, pos, positiondic)
        pos = pos+1
    print("unique words: ", uniquelist)
    return constructor(positiondic)


def positionsaver(word, pos, positiondic):
    arr = []
    if word in positiondic:
        arr = positiondic[word]
        arr.append(pos)
        positiondic[word] = arr

    else:
        arr.append(pos)
        positiondic[word] = arr

    return positiondic


def constructor(positiondic):
    sorted = []
    sentence = []

    for k, v in positiondic.items():
        for i in v:
            sorted.append(i)

        sorted.sort()

    for number in sorted:
        for k, v in positiondic.items():
            for i in range(len(v)):
                if number == positiondic[k][i]:
                    sentence.append(k)
    return sentence


text = input("digite uma frase: ")
=======
def separator(t):
    arr = t.split(" ")
    return unique(arr)


def unique(arr):
    pos = 0
    uniquelist = []
    positiondic = {}
    positionuniquedic = {}

    for word in arr:

        if word not in uniquelist:
            uniquelist.append(word)
            positionuniquedic[word] = pos

        positionsaver(word, pos, positiondic)
        pos = pos+1
    print("unique words: ", uniquelist)
    return constructor(positiondic)


def positionsaver(word, pos, positiondic):
    arr = []
    if word in positiondic:
        arr = positiondic[word]
        arr.append(pos)
        positiondic[word] = arr

    else:
        arr.append(pos)
        positiondic[word] = arr

    return positiondic


def constructor(positiondic):
    sorted = []
    sentence = []

    for k, v in positiondic.items():
        for i in v:
            sorted.append(i)

        sorted.sort()

    for number in sorted:
        for k, v in positiondic.items():
            for i in range(len(v)):
                if number == positiondic[k][i]:
                    sentence.append(k)
    return sentence


text = input("digite uma frase: ")
>>>>>>> 219477453527abe712f6e793c208795339ec011e
print(separator(text))
>>>>>>> 466424345a42f5a3cfa5c65decfc744bce99173e
